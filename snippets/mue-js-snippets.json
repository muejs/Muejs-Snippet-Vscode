{

    "折叠菜单初始化": {
        "prefix": "mue-accordion",
        "description": "",
        "body": [
            "var uiAccordion = mue.accordion({",
            " id:\"#uiAccordion\"",
            "});"
        ]
    },

    "折叠菜单-示例": {
        "prefix": "mue-accordion-demo",
        "description": "",
        "body": [
            "// 折叠菜单 js 初始化: ",
            "var uiAccordion = mue.accordion({",
            "    id:\"#uiAccordion\"",
            "});",
            "                ",
            "",
            "<!-- 折叠菜单 html 对应的结构: -->",
            "<dl id=\"uiAccordion\" class=\"mue-accordion\">",
            "  <dt class=\"mue-btn mue-box\">",
            "    <div class=\"span1\">标题</div>",
            "    <i class=\"icon-accordion\"></i>",
            "  </dt>",
            "  <dd>",
            "   折叠内容",
            "  </dd>",
            "</dl>"
        ]
    },

    "上拉菜单初始化": {
        "prefix": "mue-actionsheet",
        "description": "",
        "body": [
            "var uiActionsheet = mue.actionsheet({",
            "    trigger: \"#btnOpen\",",
            "    buttons: [{ name:\"分享到微博\",value:\"weibo\" }],",
            "    callback: function (e) {",
            "        var val = $(e.target).attr(\"value\");",
            "        if( val == \"cancel\"){",
            "            this.hide();",
            "        }",
            "    }",
            "})"
        ]
    },

    "上拉菜单-示例": {
        "prefix": "mue-actionsheet-demo",
        "description": "",
        "body": [
            "// 上拉菜单 js 初始化: ",
            "var uiActionsheet = mue.actionsheet({",
            "  trigger: \"#btnOpen\",",
            "  buttons: [{ name:\"分享到微博\",value:\"weibo\" },{ name:\"分享到微信\",value:\"weixin\" },{ ",
            "name:\"分享到QQ\",value:\"QQ\" }],",
            "  callback: function (e) {",
            "    ",
            "    var val = $(e.target).attr(\"value\");",
            "    ",
            "    if( val == \"cancel\"){",
            "      this.hide();",
            "    }",
            "  }",
            "})",
            "                ",
            "",
            "<!-- 上拉菜单 html 对应的结构: -->",
            "<div id=\"btnOpen\" class=\"mue-btn\">打开下拉菜单</div>"

        ]
    },

    "绑定按钮跳转": {
        "prefix": "mue-btn-load",
        "description": "",
        "body": [
            "mue.btn({id:\"#page\",handle:\".mue-btn\"}).load();"
        ]
    },

    "绑定按钮提交": {
        "prefix": "mue-btn-submit",
        "description": "",
        "body": [
            "mue.btn(\"#btn\").submit(function(loading){",
            "  loading.stop();",
            "});"
        ]
    },

    "绑定按钮点击": {
        "prefix": "mue-btn-click",
        "description": "",
        "body": [
            "mue.btn(\"#btn\").click(function(e){",
            "    $1",
            "});"
        ]
    },

    "对话框": {
        "prefix": "mue-alert",
        "description": "",
        "body": [
            "mue.alert(\"提醒内容\");"
        ]
    },

    "确认框": {
        "prefix": "mue-confirm",
        "description": "",
        "body": [
            "mue.confirm(\"提醒内容\",function(e){",
            "    ",
            "    var text = $(e.target).text();",
            "    if( text == \"确定\" ){",
            "      //do something",
            "    }",
            "  this.close();",
            "});"
        ]
    },

    "自定义对话框初始化": {
        "prefix": "mue-dialog",
        "description": "",
        "body": [
            "var uiDialog = mue.dialog({",
            "    id: \"#uiDialog\"",
            "});"
        ]
    },

    "自定义对话框-示例": {
        "prefix": "mue-dialog-demo",
        "description": "",
        "body": [
            "// 弹出框 js 初始化:// 计算列表的高度",
            "var uiDialog = mue.dialog({",
            "    id: \"#uiDialog\"",
            "});",
            "",
            "                ",
            "<!-- 弹出框 html 对应的结构: -->",
            "<div id=\"uiDialog\" class=\"mue-dialog\" style=\"display:none;\">",
            "    <div class=\"mue-dialog-head\">标题</div>",
            "    <div class=\"mue-dialog-main\">提示内容</div>",
            "    <div class=\"mue-dialog-close\">",
            "        <i class=\"icon-close\"></i>",
            "    </div>",
            "</div>"
        ]
    },

    "自动消失提醒": {
        "prefix": "mue-hint",
        "description": "",
        "body": [
            "mue.hint(\"提醒内容\");"
        ]
    },

    "下拉菜单初始化": {
        "prefix": "mue-dropdown",
        "description": "",
        "body": [
            "var uiDropdown = mue.dropdown({",
            "    id: \"#uiDropdown\",",
            "    data: [{",
            "        name:\"广州\",",
            "        value:\"广州\"",
            "    }],",
            "    //设置relative为false,二级菜单继承父层宽度",
            "    relative: false,",
            "    callback: function (e) {",
            "    }",
            "});"
        ]
    },

    "下拉菜单初始化-示例": {
        "prefix": "mue-dropdown-demo",
        "description": "",
        "body": [
            "// 下拉菜单 js 初始化:",
            "var uiDoropdown = mue.dropdown({",
            "    id: \"#uiDropdown\",",
            "    data: [{",
            "        name:\"广州\",",
            "        value:\"广州\"",
            "    }],",
            "    //设置relative为false,二级菜单继承父层宽度",
            "    relative: false,",
            "    callback: function (e) {",
            "    }",
            "})",
            "                ",
            "<!-- 下拉菜单 html 对应的结构: -->",
            "<div id=\"uiDropdown\" class=\"mue-dropdown\">",
            "  <div class=\"mue-btn mue-box\" >",
            "    <div class=\"span1\">下拉菜单</div>",
            "    <i class=\"icon-dropdown\"></i>",
            "  </div>",
            "</div> "
        ]
    },

    "下拉刷新加载列表初始化": {
        "prefix": "mue-list",
        "description": "",
        "body": [
            "// 列表控件 js 初始化: ",
            "var uiList = mue.list({",
            "    id: \"#uiList\",",
            "    url: \"http://rap2api.taobao.org/app/mock/84605/example/getNews\",",
            "    pageSize:5,",
            "    data: {},",
            "    //如果分页的字段名不一样,通过field重新定义",
            "    field: {",
            "        page: \"page\",",
            "        size: \"pageSize\",",
            "        data: \"data\"",
            "    },",
            "    callback: function (e) {},",
            "    template: function (data) {",
            "        var html = \"\";",
            "        data.forEach(function(el, index) {",
            "",
            "            html +=`<li class=\"mue-btn mue-box\">",
            "                <div class=\"mue-thumbnail\"><img src=\"${el.image}\" alt=\"\"></div>",
            "                <div class=\"span1\">",
            "                    <h3 class=\"item-title\">${el.name}</h3>",
            "                    <p class=\"item-text\">${el.address}</p>",
            "                    <p class=\"item-text\">${el.distance}公里</p>",
            "                </div>",
            "                <span class=\"price\"><i>￥</i>${el.price}</span>",
            "            </li>`",
            "        });",
            "",
            "        return html;",
            "    }",
            "});"

        ]
    },

    "下拉刷新加载列表-示例": {
        "prefix": "mue-list-demo",
        "description": "",
        "body": [
            "// 列表控件 js 初始化: ",
            "var uiList = mue.list({",
            "    id: \"#uiList\",",
            "    url: \"http://rap2api.taobao.org/app/mock/84605/example/getNews\",",
            "    pageSize:5,",
            "    data: {},",
            "    //如果分页的字段名不一样,通过field重新定义",
            "    field: {",
            "        page: \"page\",",
            "        size: \"pageSize\",",
            "        data: \"data\"",
            "    },",
            "    callback: function (e) {},",
            "    template: function (data) {",
            "        var html = \"\";",
            "        data.forEach(function(el, index) {",
            "",
            "            html +=`<li class=\"mue-btn mue-box\">",
            "                <div class=\"mue-thumbnail\"><img src=\"${el.image}\" alt=\"\"></div>",
            "                <div class=\"span1\">",
            "                    <h3 class=\"item-title\">${el.name}</h3>",
            "                    <p class=\"item-text\">${el.address}</p>",
            "                    <p class=\"item-text\">${el.distance}公里</p>",
            "                </div>",
            "                <span class=\"price\"><i>￥</i>${el.price}</span>",
            "            </li>`",
            "        });",
            "",
            "        return html;",
            "    }",
            "});",
            "",
            "<!-- 列表控件 html 对应的结构:  -->",
            "<div id=\"uiList\" class=\"mue-scroll\">",
            "    <div class=\"mue-scroll-head\"></div>",
            "    <div class=\"mue-scroll-main\">",
            "        <ul class=\"mue-list\">",
            "        </ul>",
            "    </div>",
            "    <div class=\"mue-scroll-foot\"></div>",
            "</div>"
        ]
    },

    "侧滑列表初始化": {
        "prefix": "mue-listview",
        "description": "",
        "body": [
            "// 侧滑列表 js 初始化: ",
            "var uiListview = mue.listview({",
            "    id: \"#uiListview\",",
            "    data: [{ \"text\": \"删除\", \"classname\":\"danger\"}],",
            "    callback: function (e) {",
            "        // e.target 为滑动出来的操作按钮",
            "        var target = $(e.target);",
            "        var text = target.text();",
            "            if( text == \"删除\" ){",
            "                mue.confirm(\"确定要删除吗\",function (e) {",
            "                    var text2 = $(e.target).text();",
            "                    if( text2 == \"确定\"){",
            "                        // 执行删除整行操作",
            "                        target.parents(\"li\").fadeOut(300,function () {",
            "                            $(this).remove();",
            "                        });",
            "                    }",
            "                })",
            "            }",
            "        // 不管做什么操作,先关闭按钮",
            "        this.close();",
            "    }",
            "});"

        ]
    },

    "侧滑列表-示例": {
        "prefix": "mue-listview-demo",
        "description": "",
        "body": [
            "// 侧滑列表 js 初始化: ",
            "var uiListview = mue.listview({",
            "    id: \"#uiListview\",",
            "    data: [{ \"text\": \"删除\", \"classname\":\"danger\"}],",
            "    callback: function (e) {",
            "        // e.target 为滑动出来的操作按钮",
            "        var target = $(e.target);",
            "        var text = target.text();",
            "            if( text == \"删除\" ){",
            "                mue.confirm(\"确定要删除吗\",function (e) {",
            "                    var text2 = $(e.target).text();",
            "                    if( text2 == \"确定\"){",
            "                        // 执行删除整行操作",
            "                        target.parents(\"li\").fadeOut(300,function () {",
            "                            $(this).remove();",
            "                        });",
            "                    }",
            "                })",
            "            }",
            "        // 不管做什么操作,先关闭按钮",
            "        this.close();",
            "    }",
            "});",
            "",
            "// 侧滑列表 html 对应的结构:",
            "<ul id=\"uiListview\" class=\"mue-listview\">",
            "  <li>",
            "    <div class=\"mue-btn mue-box\">",
            "      <div class=\"span1\">左滑动出现菜单</div>",
            "      <i class=\"icon-listright\"></i>",
            "    </div>",
            "  </li>",
            "</ul>"

        ]
    },

    "侧滑列表-demo-自定义按钮": {
        "prefix": "mue-listview-demo-custom",
        "description": "",
        "body": [
            "// 侧滑列表自定义结构 js 初始化:",
            "var uiListview = mue.listview({",
            "    id: \"#uiListview\",",
            "    callback: function (e,menu) {",
            "        //关闭菜单",
            "        menu.close();",
            "    }",
            "});",
            "",
            "// 侧滑列表自定义结构 html 对应的结构:",
            "<ul id=\"uiListview\" class=\"mue-listview\">",
            "    <!-- 设置status属性可以避免重复渲染菜单 -->",
            "    <li status=\"1\">",
            "        <div class=\"mue-btn mue-box\">",
            "            <div class=\"span1\">左右菜单</div>",
            "            <i class=\"icon-listright\"></i>",
            "        </div>",
            "        <!-- data-moving 自定义左滑的距离 -->",
            "        <div class=\"mue-listview-menu swipeleft\" data-moving=\"240\">",
            "            <div class=\"mue-btn primary\">置顶</div>",
            "            <div class=\"mue-btn primary\">修改</div>",
            "            <div class=\"mue-btn danger\">删除</div>",
            "        </div>",
            "        <div class=\"mue-listview-menu swiperight\">",
            "            <div class=\"mue-btn primary\">修改</div>",
            "            <div class=\"mue-btn danger\">删除</div>",
            "        </div>",
            "    </li>",
            "</ul>"

        ]
    },

    "页面正在加载": {
        "prefix": "mue-loading",
        "description": "",
        "body": [
            "var uiLoading = mue.loading();",
            "    uiLoading.show();"
        ]
    },

    "页面遮罩初始化": {
        "prefix": "mue-mask",
        "description": "",
        "body": [
            "var uiMask = mue.mask();",
            "    uiMask.show();"
        ]
    },

    "数字条初始化": {
        "prefix": "mue-number",
        "description": "",
        "body": [
            "// 数字条 js 初始化:",
            "var uiNumber = mue.number({",
            "    id: \"#uiNumber\"",
            "})"
        ]
    },

    "数字加减条-示例": {
        "prefix": "mue-number-demo",
        "description": "",
        "body": [
            "// 数字条 js 初始化:",
            "var uiNumber = mue.number({",
            "    id: \"#uiNumber\"",
            "})",
            "",
            "// 数字条 html 对应的结构:",
            "<div id=\"uiNumber\" class=\"mue-number\"></div> "
        ]
    },

    "日期控件初始化": {
        "prefix": "mue-pickerdate",
        "description": "",
        "body": [
            "// 日期控件 js 初始化:",
            "var uiPickerdate = mue.pickerdate({",
            "    handle:\"#pickerdateInput\",",
            "    bindValue: true,",
            "    onChange: function(value) {",
            "      console.log(value);",
            "    }",
            "  });"

        ]
    },

    "日期控件-示例": {
        "prefix": "mue-pickerdate-demo",
        "description": "",
        "body": [
            "// 日期控件 js 初始化:",
            "var uiPickerdate = mue.pickerdate({",
            "    handle:\"#pickerdateInput\",",
            "    bindValue: true,",
            "    onChange: function(value) {",
            "      console.log(value);",
            "    }",
            "  });",
            "                ",
            "<!-- 日期控件 html 对应的结构: -->",
            "<input type=\"text\" id=\"pickerdateInput\" class=\"mue-input\" readonly>"

        ]
    },

    "下拉刷新初始化": {
        "prefix": "mue-pullrefresh",
        "description": "",
        "body": [
            "// 下拉刷新 js 初始化: ",
            "",
            "var uiPullRefresh = mue.pullrefresh({",
            "    id: \"#uiPullrefresh\",",
            "    onRefresh: getData",
            "})",
            "",
            "//请求数据 或者其它操作",
            "function getData(){",
            "    mue.ajax({",
            "      url: \"\",",
            "      data: {}",
            "    }).then(function(res){",
            "",
            "      //请求成功以后还原刷新前状态",
            "      uiPullRefresh.reverse();",
            "    },function(res){",
            "",
            "      //请求失败以后还原刷新前状态",
            "      uiPullRefresh.reverse();",
            "    })",
            "}"

        ]
    },

    "下拉刷新-示例": {
        "prefix": "mue-pullrefresh-demo",
        "description": "",
        "body": [
            "// 下拉刷新 js 初始化: ",
            "",
            "var uiPullRefresh = mue.pullrefresh({",
            "    id: \"#uiPullrefresh\",",
            "    onRefresh: getData",
            "})",
            "",
            "//请求数据 或者其它操作",
            "function getData(){",
            "    mue.ajax({",
            "      url: \"\",",
            "      data: {}",
            "    }).then(function(res){",
            "",
            "      //请求成功以后还原刷新前状态",
            "      uiPullRefresh.reverse();",
            "    },function(res){",
            "",
            "      //请求失败以后还原刷新前状态",
            "      uiPullRefresh.reverse();",
            "    })",
            "}",
            "",
            "<!-- 下拉刷新 html 对应的结构: -->",
            "<div id=\"uiPullrefresh\" class=\"mue-scroll\">",
            "    <div class=\"mue-scroll-head\"></div>",
            "    <div class=\"mue-scroll-main\">",
            "        <ul class=\"mue-list\">",
            "        </ul>",
            "    </div>",
            "</div>"

        ]
    },

    "星级评分初始化": {
        "prefix": "mue-rating",
        "description": "",
        "body": [
            "// 评分星星 js 初始化:",
            "var uiRating = mue.rating({",
            "    id: \"#uiRating\",",
            "    value: 3",
            "});  "

        ]
    },

    "星级评分-示例": {
        "prefix": "mue-rating-demo",
        "description": "",
        "body": [
            "// 评分星星 js 初始化:",
            "var uiRating = mue.rating({",
            "    id: \"#uiRating\",",
            "    value: 3",
            "});  ",
            "                ",
            "<!-- 评分星星 html 对应的结构: -->",
            "<div id=\"uiRating\" class=\"mue-rating\"></div>"
        ]
    },

    "列表滚动加载初始化": {
        "prefix": "mue-scroll",
        "description": "",
        "body": [
            "// 列表滚动加载 js 初始化: ",
            "var uiScroll = mue.scroll({",
            "    id: \"#uiScroll\",",
            "    children: \".mue-list\",",
            "    page:1,",
            "    pageSize:5,",
            "    onRefresh: function () {",
            "        var page = 1;",
            "        var pagesize = 5;",
            "        getData(page,pagesize,\"html\");",
            "    },",
            "    onLoad: getData",
            "})",
            "",
            "",
            "//新增下一页数据",
            "function getData(page,pagesize,command){",
            "  var command = command || \"append\";",
            "  ",
            "  // 更新分页信息,如果高度不足会自动请求下一页",
            "  uiScroll.updatePage(page,res.data);",
            "",
            "  // 刷新的时候返回位置",
            "  uiScroll.reverse();",
            "",
            "}"

        ]
    },

    "列表滚动加载-示例": {
        "prefix": "mue-scroll-demo",
        "description": "",
        "body": [
            "// 列表滚动加载 js 初始化: ",
            "var uiScroll = mue.scroll({",
            "    id: \"#uiScroll\",",
            "    children: \".mue-list\",",
            "    page:1,",
            "    pageSize:5,",
            "    onRefresh: function () {",
            "        var page = 1;",
            "        var pagesize = 5;",
            "        getData(page,pagesize,\"html\");",
            "    },",
            "    onLoad: getData",
            "})",
            "",
            "",
            "//新增下一页数据",
            "function getData(page,pagesize,command){",
            "  var command = command || \"append\";",
            "  ",
            "  // 更新分页信息,如果高度不足会自动请求下一页",
            "  uiScroll.updateCache(page,res.data);",
            "",
            "  // 刷新的时候返回位置",
            "  uiScroll.reverse();",
            "",
            "}",
            "",
            "<!-- 列表滚动加载 html 对应的结构: -->",
            "<div id=\"uiScroll\" class=\"mue-scroll\">",
            "    <div class=\"mue-scroll-head\"></div>",
            "    <div class=\"mue-scroll-main\">",
            "        <ul class=\"mue-list\">",
            "        </ul>",
            "    </div>",
            "    <div class=\"mue-scroll-foot\"></div>",
            "</div>"
        ]
    },

    "搜索条初始化": {
        "prefix": "mue-searchbar",
        "description": "",
        "body": [
            "// 搜索条 js 初始化:",
            "var uiList = mue.list({",
            "    id: \"#scrollSearch\",",
            "    url: \"http://rap2api.taobao.org/app/mock/84605/example/getNews\",",
            "    pageSize:5,",
            "    data: {},",
            "    //如果分页的字段名不一样,通过field重新定义",
            "    field: {",
            "        page: \"page\",",
            "        size: \"pageSize\",",
            "        data: \"data\"",
            "    },",
            "    callback: function (e) {},",
            "    template: function (data) {",
            "        var html = \"\";",
            "        data.forEach(function(el, index) {",
            "",
            "            html +=`<li class=\"mue-btn mue-box\">",
            "                <div class=\"mue-thumbnail\"><img src=\"${el.image}\" alt=\"\"></div>",
            "                <div class=\"span1\">",
            "                    <h3 class=\"item-title\">${el.name}</h3>",
            "                    <p class=\"item-text\">${el.address}</p>",
            "                    <p class=\"item-text\">${el.distance}公里</p>",
            "                </div>",
            "                <span class=\"price\"><i>￥</i>${el.price}</span>",
            "            </li>`",
            "        });",
            "",
            "        return html;",
            "    }",
            "});",
            "",
            "var uiSearchbar = mue.searchbar({",
            "        id:\"#searchbar\",",
            "        onInput: function(ui,keyword) {",
            "            //实时搜索",
            "            // console.log(++n)",
            "        },",
            "        onRemove: function(ui,keyword) {",
            "            //删除关键词需要做什么其它处理",
            "            // console.log(keyword);",
            "        },",
            "        callback: function (ui,keyword) {",
            "            if( uiList ){",
            "                //点击搜索清空数据",
            "                uiList.empty();",
            "                // 重新初始化数据",
            "                uiList.init({",
            "                    page: 1,",
            "                    data: {",
            "                        \"keyword\":keyword",
            "                    }",
            "                });",
            "            }",
            "        }",
            "",
            "    }); "
        ]
    },

    "搜索条-示例": {
        "prefix": "mue-searchbar-demo",
        "description": "",
        "body": [
            "// 搜索条 js 初始化:",
            "var uiList = mue.list({",
            "    id: \"#scrollSearch\",",
            "    url: \"http://rap2api.taobao.org/app/mock/84605/example/getNews\",",
            "    pageSize:5,",
            "    data: {},",
            "    //如果分页的字段名不一样,通过field重新定义",
            "    field: {",
            "        page: \"page\",",
            "        size: \"pageSize\",",
            "        data: \"data\"",
            "    },",
            "    callback: function (e) {},",
            "    template: function (data) {",
            "        var html = \"\";",
            "        data.forEach(function(el, index) {",
            "",
            "            html +=`<li class=\"mue-btn mue-box\">",
            "                <div class=\"mue-thumbnail\"><img src=\"${el.image}\" alt=\"\"></div>",
            "                <div class=\"span1\">",
            "                    <h3 class=\"item-title\">${el.name}</h3>",
            "                    <p class=\"item-text\">${el.address}</p>",
            "                    <p class=\"item-text\">${el.distance}公里</p>",
            "                </div>",
            "                <span class=\"price\"><i>￥</i>${el.price}</span>",
            "            </li>`",
            "        });",
            "",
            "        return html;",
            "    }",
            "});",
            "",
            "var uiSearchbar = mue.searchbar({",
            "        id:\"#searchbar\",",
            "        onInput: function(ui,keyword) {",
            "            //实时搜索",
            "            // console.log(++n)",
            "        },",
            "        onRemove: function(ui,keyword) {",
            "            //删除关键词需要做什么其它处理",
            "            // console.log(keyword);",
            "        },",
            "        callback: function (ui,keyword) {",
            "            if( uiList ){",
            "                //点击搜索清空数据",
            "                uiList.empty();",
            "                // 重新初始化数据",
            "                uiList.init({",
            "                    page: 1,",
            "                    data: {",
            "                        \"keyword\":keyword",
            "                    }",
            "                });",
            "            }",
            "        }",
            "",
            "    });     ",
            "      ",
            "<!-- 搜索条控件结构 -->",
            "<div id=\"searchbar\" class=\"mue-searchbar mue-box\">",
            "    <div class=\"span1\">",
            "        <div class=\"mue-input\">",
            "            <i class=\"icon-search\"></i>",
            "            <input type=\"search\" value=\"\" placeholder=\"请输入关键字\" />",
            "        </div>",
            "    </div>",
            "    <div class=\"btn-search\">搜索</div>",
            "</div>",
            "<!-- 列表控件结构 -->",
            "<div id=\"scrollSearch\" class=\"mue-scroll\">",
            "    <div class=\"mue-scroll-head\"></div>",
            "    <div class=\"mue-scroll-main\">",
            "        <ul class=\"mue-list\">",
            "        </ul>",
            "    </div>",
            "    <div class=\"mue-scroll-foot\"></div>",
            "</div>"
        ]
    },

    "选择列表初始化": {
        "prefix": "mue-select",
        "description": "",
        "body": [
            "// 选择列表 js 初始化:",
            "var uiSelect = mue.select({",
            "    trigger:\"#uiSelect\",",
            "    title:\"请选择区域\",",
            "    type:\"checkbox\",",
            "    data: [{",
            "        \"name\":\"广东\",",
            "        \"value\":\"gd\"",
            "    }],",
            "    buttons: [{name:\"重置\",className:\"\"},{name:\"确定\",className:\"primary-reverse\"}],",
            "    callback: function (e) {",
            "",
            "        var text = $(e.target).text();",
            "        if( text == \"重置\" ){",
            "            uiSelect.selectNone();",
            "        }else{",
            "            uiSelect.hide();",
            "        }",
            "    }",
            "})"

        ]
    },

    "选择列表-示例": {
        "prefix": "mue-select-demo",
        "description": "",
        "body": [
            "// 选择列表 js 初始化:",
            "var uiSelect = mue.select({",
            "    trigger:\"#uiSelect\",",
            "    triggerChildren:\".mue-value\",",
            "    title:\"请选择区域\",",
            "    type:\"checkbox\",",
            "    data: [{",
            "        \"name\":\"广东\",",
            "        \"value\":\"gd\"",
            "    }],",
            "    buttons: [{name:\"重置\",className:\"\"},{name:\"确定\",className:\"primary-reverse\"}],",
            "    callback: function (e) {",
            "",
            "        var text = $(e.target).text();",
            "        if( text == \"重置\" ){",
            "            uiSelect.selectNone();",
            "        }else{",
            "            uiSelect.hide();",
            "        }",
            "    }",
            "})",
            "                ",
            "<!-- 选择列表 html 对应的结构: -->",
            "<ul class=\"mue-list\">",
            "    <li class=\"mue-btn mue-box\" id=\"uiSelect\">",
            "        <label>请选择区域</label>",
            "        <div class=\"span1\">",
            "            <div class=\"mue-value\"></div>",
            "        </div>",
            "        <i class=\"icon-listright\"></i>",
            "    </li>",
            "</ul>"
        ]
    },

    "侧滑栏初始化": {
        "prefix": "mue-sidebar",
        "description": "",
        "body": [
            "// 侧边栏 js 初始化: ",
            "var uiSidebar = mue.sidebar({",
            "    id: \"#sidebarWrap\",",
            "    width: 644,",
            "    trigger : \"#menu\"",
            "})"

        ]
    },

    "侧滑栏-示例": {
        "prefix": "mue-sidebar-demo",
        "description": "",
        "body": [
            "// 侧边栏 js 初始化: ",
            "var uiSidebar = mue.sidebar({",
            "    id: \"#sidebarWrap\",",
            "    width: 644,",
            "    trigger : \"#menu\"",
            "})",
            "                ",
            "// 侧边栏 html 对应的结构:",
            "<div id=\"sidebarWrap\" class=\"mue-sidebar-wrap\">",
            "  <!-- 侧滑菜单 -->",
            "  <div class=\"mue-sidebar swiperight\">",
            "    <img src=\"images/placeholder-sidebar.jpg\" alt=\"占位图\">",
            "  </div>",
            "  <!-- 正文内容 -->",
            "  <div class=\"mue-page\">",
            "      <div id=\"menu\" class=\"menu\"><i class=\"icon-menu\"></i></div>",
            "  </div>",
            "</div>"
        ]
    },

    "焦点图初始化": {
        "prefix": "mue-slide",
        "description": "",
        "body": [
            "// 焦点图 js 初始化:",
            "var uiSlide = mue.slide({",
            "    id:\"#uiSlide\",",
            "    height:380,",
            "    autopage: true,",
            "    loop: true",
            "})"
        ]
    },

    "焦点图-示例": {
        "prefix": "mue-slide-demo",
        "description": "",
        "body": [
            "// 焦点图 js 初始化:",
            "var uiSlide = mue.slide({",
            "    id:\"#uiSlide\",",
            "    height:380,",
            "    autopage: true,",
            "    loop: true,",
            "    data: [{",
            "        image: \"images/banner01.png\",",
            "        url: \"pages/ui_controls/mue.slide_title.html\",",
            "    },{",
            "        image: \"images/banner02.png\",",
            "        url: \"pages/ui_controls/mue.slide_title.html\",",
            "    }]",
            "})",
            "                ",
            "// 焦点图 html 对应的结构:",
            "<div id=\"uiSlide\" class=\"mue-slide mue-slide-skin01\"></div>"
        ]
    },

    "步骤条初始化": {
        "prefix": "mue-stepbar",
        "description": "",
        "body": [
            "// 步骤条 js 初始化:",
            "var uiStepbar = mue.stepbar({",
            "    id: \"#uiStepbar\",",
            "    data: [{",
            "        title: \"预立项申请\",",
            "        subtitle: \"2016-04-2 10:30\",",
            "        content: \"成功创建申请,已经提交至XX部门经理审批,请耐心等待\"",
            "    },{",
            "        title: \"立项审批\",",
            "        subtitle: \"2016-04-21 10:30\",",
            "        content: \"审批完成,资料递交中\"",
            "    }]",
            "});"
        ]
    },

    "步骤条-示例": {
        "prefix": "mue-stepbar-demo",
        "description": "",
        "body": [
            "// 步骤条 js 初始化:",
            "var uiStepbar = mue.stepbar({",
            "    id: \"#uiStepbar\",",
            "    data: [{",
            "        title: \"预立项申请\",",
            "        subtitle: \"2016-04-2 10:30\",",
            "        content: \"成功创建申请,已经提交至XX部门经理审批,请耐心等待\"",
            "    },{",
            "        title: \"立项审批\",",
            "        subtitle: \"2016-04-21 10:30\",",
            "        content: \"审批完成,资料递交中\"",
            "    }]",
            "});",
            "",
            "//激活第2步",
            "uiStepbar.value(1);   ",
            "                ",
            "<!-- 步骤条 html 对应的结构: -->",
            "<div id=\"uiStepbar\" class=\"mue-stepbar\"></div>  "
        ]
    },

    "抽屉滑动控件初始化": {
        "prefix": "mue-swipe",
        "description": "",
        "body": [
            "var uiSwipe = mue.swipe({",
            "    id: \"#uiSwipe\",",
            "    handle: \".mue-page\",",
            "    movingDistance: 200,",
            "    direction: \"xy\",",
            "});"
        ]
    },

    "抽屉滑动控件-示例": {
        "prefix": "mue-swipe-demo",
        "description": "",
        "body": [
            "// 抽屉滑动控件 js 初始化:",
            "var uiSwipe = mue.swipe({",
            "    id: \"#uiSwipe\",",
            "    handle: \".mue-page\",",
            "    movingDistance: 400,",
            "    direction: \"xy\",",
            "}); ",
            "                ",
            "<!-- 抽屉滑动控件 html 对应的结构: -->",
            "<div id=\"uiSwipe\" class=\"wrap\">",
            "    <!-- 侧滑菜单 -->",
            "    <div class=\"swipeleft\" data-moving=\"300\">",
            "        右边菜单",
            "    </div>",
            "    <div class=\"swiperight\" >",
            "        左边菜单",
            "    </div>",
            "    <div class=\"swipeup\" >",
            "        底部菜单",
            "    </div>",
            "    <div class=\"swipedown\">",
            "        顶部菜单",
            "    </div>",
            "    <!-- 正文内容 -->",
            "    <div id=\"page\" class=\"mue-page\">",
            "        正文内容",
            "    </div>",
            "</div>"
        ]
    },

    "选项卡底部动态加载": {
        "prefix": "mue-tab-demo-footer",
        "description": "",
        "body": [
            "// 选项卡 js 初始化:",
            "var tab = mue.tab({",
            "    id:\"#tabDynamic\",",
            "    menu:\"#tabDynamicNav\",",
            "    // 1: 声明是动态加载的tab",
            "    autoload: true,",
            "})",
            "",
            "// 2: 监听跳转的时候触发",
            "tab.on(\"to\",function (index) {",
            "    // 根据索引加载对应的脚本",
            "    switch(index){",
            "        case 0:",
            "        loader.require([\"pages/main/home\"],function(main){",
            "            console.log(\"有回调每次都执行\")",
            "        })",
            "        break;",
            "        case 1:",
            "        console.log(\"没回调只加载一次\")",
            "        loader.require([\"pages/main/news\"])",
            "    }",
            "}).to(0);",
            "",
            "                ",
            "<!-- 选项卡 html 对应的结构: 分别替换main,footer标签, 如果main有其它内容,则复制mue-tab的结构-->",
            "<main>",
            "    <div id=\"tabDynamic\" class=\"mue-tab mue-box-vertical\">",
            "        <div class=\"mue-tab-main\">",
            "            <ul>",
            "                <li><!-- Tab1 --></li>",
            "                <li style=\"display: none;\"><!-- Tab2 --></li>",
            "            </ul>",
            "        </div>",
            "    </div>",
            "</main>",
            "<footer>",
            "<ul id=\"tabDynamicNav\" class=\"mue-nav\">",
            "    <li class=\"mue-btn mue-box-vertical active\" href=\"pages/main/home.html\"><i class=\"icon-home\"><span class=\"mue-badges\">5</span></i><div class=\"span1\">Tab1</div></li>",
            "    <li class=\"mue-btn mue-box-vertical\" href=\"pages/main/news.html\"><i class=\"icon-edit\"></i><div class=\"span1\">Tab2</div></li>",
            "</ul>",
            "</footer>"
        ]
    },

    "选项卡控件-示例": {
        "prefix": "mue-tab-demo",
        "description": "",
        "body": [
            "// 选项卡 js 初始化:",
            "var uiTab = mue.tab({",
            "    id:\"#uiTab\"",
            "});",
            "                ",
            "<!-- 选项卡 html 对应的结构: -->",
            "<div id=\"uiTab\" class=\"mue-tab mue-box-vertical\">",
            "    <div class=\"mue-tab-head\">",
            "        <ul class=\"mue-nav\">",
            "            <li class=\"mue-btn\">Tab1</li>",
            "            <li class=\"mue-btn\">Tab2</li>",
            "        </ul>",
            "    </div>",
            "    <div class=\"mue-tab-main\">",
            "        <ul>",
            "            <li><img src=\"images/placeholder-list.png\" alt=\"占位图\"></li>",
            "            <li style=\"display: none;\">",
            "                <img src=\"images/placeholder-list.png\" alt=\"占位图\"></li>",
            "        </ul>",
            "    </div>",
            "</div> "
        ]
    },

    "选项卡-初始化": {
        "prefix": "mue-tab",
        "description": "",
        "body": [
            "// 选项卡 js 初始化:",
            "var uiTab = mue.tab({",
            "    id:\"#uiTab\"",
            "});"

        ]
    },

    "选项卡底部-组件化": {
        "prefix": "mue-tab-component",
        "description": "",
        "body": [
            "// html:",
            "// <div id=\"uiTab\" class=\"mue-tab\"></div>",
            "var uiTab = mue.tab({",
            "    id: \"#uiTab\",",
            "    position: \"bottom\",",
            "    iconPosition: \"top\",",
            "    data: [{",
            "            id: \"uiTab0\",",
            "            icon: \"icon-home\",",
            "            title: \"首页\",",
            "            name: \"pages/components/list/index\",",
            "            param: { type: \"news\" }",
            "        }, {",
            "            id: \"uiTab1\",",
            "            icon: \"icon-menu\",",
            "            title: \"分类\",",
            "            name: \"pages/components/list/index\",",
            "            param: { type: \"photo\" },",
            "        }",
            "    ]",
            "})"
        ]
    },
    "选项卡顶部-组件化": {
        "prefix": "mue-tab-component-head",
        "description": "",
        "body": [
            "// html:",
            "// <div id=\"uiTabHead\" class=\"mue-tab\"></div>",
            "var uiTabHead = mue.tab({",
            "    id: \"#uiTabHead\",",
            "    position: \"top\",",
            "    iconPosition: \"left\",",
            "    data: [{",
            "            id: \"uiTabHead0\",",
            "            icon: \"icon-home\",",
            "            title: \"首页\",",
            "            name: \"pages/components/list/index\",",
            "            param: { type: \"news\" }",
            "        }, {",
            "            id: \"uiTabHead1\",",
            "            icon: \"icon-menu\",",
            "            title: \"分类\",",
            "            name: \"pages/components/list/index\",",
            "            param: { type: \"photo\" },",
            "        }",
            "    ]",
            "})"
        ]
    },
    "选项卡左边-组件化": {
        "prefix": "mue-tab-component-left",
        "description": "",
        "body": [
            "// html:",
            "// <div id=\"uiTabLeft\" class=\"mue-tab\"></div>",
            "var uiTabLeft = mue.tab({",
            "    id: \"#uiTabLeft\",",
            "    position: \"left\",",
            "    iconPosition: \"left\",",
            "    sideWidth: 90,",
            "    data: [{",
            "            id: \"uiTabLeft0\",",
            "            icon: \"icon-home\",",
            "            title: \"首页\",",
            "            name: \"pages/components/list/index\",",
            "            param: { type: \"news\" }",
            "        }, {",
            "            id: \"uiTabLeft1\",",
            "            icon: \"icon-menu\",",
            "            title: \"分类\",",
            "            name: \"pages/components/list/index\",",
            "            param: { type: \"photo\" },",
            "        }",
            "    ]",
            "})"
        ]
    },
    "级联控件-完整初始化": {
        "prefix": "mue-levelselect-demo",
        "description": "",
        "body": [
            "// 级联控件 js 初始化:",
            "var uiLevelSelect = mue.levelselect({",
            "   data: [{",
            "    \"n\":\"北京\",",
            "    \"c\":[{\"a\":[\"城区\",\"城区以外\"],\"n\":\"密云区\"}]",
            "    }],",
            "   title: \"所在地区\",",
            "   trigger: \".selected-val\",",
            "   level: 3,",
            "   field:{",
            "       name: \"n\",",
            "       data: [\"c\",\"a\"],",
            "   }",
            "})",
            "",
            "$(\"#chooseCity\").on(\"click\",function (e) {",
            "    uiLevelSelect.show();",
            "})",
            "                ",
            "<!-- 级联控件 html 对应的结构: -->",
            "<ul class=\"mue-list\">",
            "    <li class=\"mue-btn mue-box clearactive\">",
            "        <div class=\"mue-label\">所在地区</div>",
            "        <div class=\"span1\">",
            "            <div id=\"chooseCity\" class=\"mue-box\">",
            "                <div class=\"selected-val\"></div>",
            "                <div class=\"selected-val\"></div>",
            "                <div class=\"selected-val\"></div>",
            "            </div>",
            "        </div>",
            "    </li>",
            "</ul> "
        ]
    },
    "级联控件-初始化": {
        "prefix": "mue-levelselect",
        "description": "",
        "body": [
            "// 级联控件 js 初始化:",
            "var uiLevelSelect = mue.levelselect({",
            "   data: [{",
            "    \"n\":\"北京\",",
            "    \"c\":[{\"a\":[\"城区\",\"城区以外\"],\"n\":\"密云区\"}]",
            "    }],",
            "   title: \"所在地区\",",
            "   trigger: \".selected-val\",",
            "   level: 3,",
            "   field:{",
            "       name: \"n\",",
            "       data: [\"c\",\"a\"],",
            "   }",
            "})"
        ]
    },
    "输入框-初始化": {
        "prefix": "mue-input-demo",
        "description": "",
        "body": [
            "// input js 初始化: ",
            "mue.input({",
            "    id: \"#userInput\",",
            "    callback: function (e) {",
            "        // 清空数据",
            "        this.empty();",
            "    }",
            "})",
            "",
            "<!-- input html 对应的结构: -->",
            "<div id=\"userInput\" class=\"mue-input\">",
            "    <input type=\"text\" value=\"\" placeholder=\"请输入\">",
            "</div>"

        ]
    },
    "上传-示例": {
        "prefix": "mue-upload-demo",
        "description": "",
        "body": [
            "// 拍照上传",
            "var photos = $(\"#muePhoto\");",
            "var uiUpload = mue.upload();",
            "",
            "",
            "// 上拉菜单 js 初始化: ",
            "var uiActionsheet = mue.actionsheet({",
            "  trigger: \"#btnUpload\",",
            "  buttons: [{ name:\"拍照上传\",value:\"camera\" },{ name:\"从相册选取\",value:\"photo\" }],",
            "  callback: function (e) {",
            "    var ui = this;",
            "    var val = $(e.target).attr(\"value\");",
            "    switch( val ){",
            "        case \"camera\":",
            "        ui.hide();",
            "        uiUpload.add({",
            "            \"from\": \"camera\",",
            "            \"onSuccess\": function (val,data) {",
            "                // 展示本地图片",
            "                this.toBase64({",
            "                    onSuccess: function (url) {",
            "                        photos.prepend(templatePhoto(url))",
            "                   ",
            "                    }",
            "                });",
            "",
            "                // 也可以直接调用start上传图片",
            "            }",
            "        })",
            "        ",
            "        break;",
            "        case \"photo\":",
            "        ui.hide();",
            "        uiUpload.add({",
            "            \"from\": \"\",",
            "            \"onSuccess\": function (val,data) {",
            "                // 展示本地图片",
            "                this.toBase64({",
            "                    onSuccess: function (url) {",
            "                        photos.prepend(templatePhoto(url))",
            "                    }",
            "                });",
            "                // 也可以直接调用start上传图片",
            "            }",
            "        })",
            "",
            "        break;",
            "        case \"cancel\":",
            "        ui.hide();",
            "        break;",
            "    }",
            "  }",
            "})",
            "",
            "function templatePhoto(url) {",
            "    return `<div class=\"span1\">",
            "            <div class=\"mue-upload-thumbnail\"><img src=\"${url}\" alt=\"\" /></div>",
            "        </div>`",
            "}   ",
            "",
            "<!-- 上传的结构 -->",
            "<div id=\"muePhoto\" class=\"mue-upload mue-fluid-space-4\">",
            "    <div class=\"span1\">",
            "        <div id=\"btnUpload\" class=\"mue-btn\">",
            "            <i class=\"icon-plus large\"></i>",
            "        </div>",
            "    </div>",
            "</div> "
        ]
    },

    "页面刷新": {
        "prefix": "mue-refresh",
        "description": "",
        "body": [
            "mue.refresh();"
        ]
    },

    "页面跳转传参": {
        "prefix": "mue-load",
        "description": "",
        "body": [
            "mue.load({url:\"\",param:{} });"
        ]
    },

    "页面接收参数": {
        "prefix": "mue-getPageParams",
        "description": "",
        "body": [
            "var getParams = mue.getPageParams();",
            "    getParams.done(function(result){",
            "        console.log(result)",
            "    })"
        ]
    },

    "页面后退": {
        "prefix": "mue-back",
        "description": "",
        "body": [
            "mue.back();"
        ]
    },

    "数据请求": {
        "prefix": "mue-ajax",
        "description": "",
        "body": [
            "mue.ajax({",
            "    url: \"http://\",",
            "    data: {},//接口请求的参数",
            "    // 可选参数",
            "    method: \"GET\"",
            "}).then(function(result){",
            "    // 成功",
            "},function(result,status){",
            "    // 失败 console.log(status)",
            "});"
        ]
    },

    "设备都准备完毕-原生事件初始化": {
        "prefix": "mue-ready",
        "description": "",
        "body": [
            "var uiReady = mue.ready(function(){",
            "    // 原生事件初始化",
            "});"
        ]
    },

    "检查新版": {
        "prefix": "mue-checkVersion",
        "description": "",
        "body": [
            "// 当前版本的配置, name 为提示的版本信息名, code 一般为当前日期数字类型,用于比对新版.",
            "var currentVersion = {",
            "    name: \"1.0\",",
            "    code: 20191204 ",
            "}",
            "mue.checkVersion({",
            "    id: \"#checkVersion\",",
            "    url: \"versionUpdate.json\",",
            "    currentVersion: currentVersion.name,",
            "    currentVersionCode: currentVersion.code",
            "});",
            "",
            "// versionUpdate.json 示例, 区分大小写",
            "/*",
            "{",
            "    \"versionName\" : \"1.4.1\",",
            "    \"versionCode\" : 20180118,",
            "    \"minVersionCode\" : 20171010,",
            "    \"forced\" : false,",
            "    \"downloadUrl\" : \"http://www.muejs.com/downloads/source/mue/mue_latest.zip\",",
            "    \"iosDownloadUrl\" : \"https://itunes.apple.com/cn/app/id1362470378?mt=8\",",
            "    \"remark\" : \"<div style=\"text-align:left;\"><p>1. 新增单页路由</p><p>2. 新增模块化开发</p><p>3. 支持路由切换动画</p><p>4. 修复已知bug</p></div>\"",
            "}",
            "*/"
        ]
    },

    "动画处理": {
        "prefix": "mue-animate",
        "description": "",
        "body": [
            "/* 动画示例,支持链式动画,最后需要执行start(); */",
            "var uiAnimatePage = mue.animate(\"#page\");",
            "    uiAnimatePage.left(100).start();"
        ]
    },

    "动画切换": {
        "prefix": "mue-toggle",
        "description": "",
        "body": [
            "/* toggle动画示例 */",
            "var uiToggle = mue.toggle({id:\"#page\"});",
            "    //在需要的地方使用显示隐藏效果,支持自定义动画",
            "    //uiToggle.show();",
            "    //uiToggle.hide();"
        ]
    },

    "数据存储": {
        "prefix": "mue-storage",
        "description": "",
        "body": [
            "// 允许存储2条数据,默认1条",
            "var uiStorage = mue.storage();",
            "    // 保存第1条数据",
            "    uiStorage.set(\"code\",\"123\");"
        ]
    },

    "检测字符是否存在数组,返回索引": {
        "prefix": "mue-array-index",
        "description": "",
        "body": [
            "var arr = [\"a\",\"b\"],",
            "    index = mue.array.index(\"a\", arr);"
        ]
    },

    "检测字符是否存在数组,返回所有索引的数组": {
        "prefix": "mue-array-indexs",
        "description": "",
        "body": [
            "var arr = [\"a\",\"b\",\"a\"],",
            "    index = mue.array.indexs(\"a\", arr);"
        ]
    },

    "检测字符是否存在数组,返回布尔值": {
        "prefix": "mue-array-compare",
        "description": "",
        "body": [
            "var arr = [\"a\",\"b\"],",
            "    index = mue.array.compare(a, arr);"
        ]
    },

    "去除数组的重复值,返回数组": {
        "prefix": "mue-array-excess",
        "description": "",
        "body": [
            "var arr = [\"a\",\"b\",\"a\",\"c\"],",
            "    newArr = mue.array.excess(\"a\", arr);"
        ]
    },

    "过滤数组,返回符合条件的数组": {
        "prefix": "mue-array-filter",
        "description": "",
        "body": [
            "var arr = [\"a\",\"b\"],",
            "    data = mue.array.filter(\"a\",arr);"
        ]
    },

    "删除数组的某个值,返回剩下的数组": {
        "prefix": "mue-array-remove",
        "description": "",
        "body": [
            "var arr = [\"a\",\"b\"],",
            "    data = mue.array.remove(\"a\", arr);"
        ]
    },

    "图片及文件资源初始完毕触发onload事件": {
        "prefix": "mue-on-onload",
        "description": "",
        "body": [
            "mue.on(\"onload\",function(){",
            "    //图片及文件资源初始完毕",
            "})"
        ]
    },

    "DOM及Mue初始完毕触发pageinit事件": {
        "prefix": "mue-on-pageinit",
        "description": "",
        "body": [
            "mue.on(\"pageinit\",function(){",
            "    //DOM及Mue初始完毕",
            "})"
        ]
    },

    "原生事件初始完毕触发pageready事件": {
        "prefix": "mue-on-pageready",
        "description": "",
        "body": [
            "mue.on(\"pageready\",function(){",
            "    //DOM 及 Mue 及 原生方法 初始完毕",
            "})"
        ]
    },

    "Mue初始完前触发pagebefore事件": {
        "prefix": "mue-on-pagebefore",
        "description": "",
        "body": [
            "mue.on(\"pagebefore\",function(){",
            "    //DOM初始完毕",
            "})"
        ]
    },

    "单页路由": {
        "prefix": "mue-router",
        "description": "",
        "body": [
            "window.router = mue.router();",
            "",
            "mue.ready(function () {",
            "",
            "    router.init({",
            "        id: \"#mue-router\",",
            "        progress: true,",
            "        // 动画优先",
            "        // firstAnimate: true,",
            "        // webapp部署的时候改为true, 这样物理刷新缓存还在",
            "        reloadCache: false",
            "    })",
            "",
            "})"
        ]
    },

    "单页路由--跳转传参": {
        "prefix": "router-load",
        "description": "",
        "body": [
            "router.load({url:\"\",param:{}});"
        ]
    },
    "单页路由--预加载": {
        "prefix": "router-preload",
        "description": "",
        "body": [
            "router.preload([{url:\"\"}]).then(function(e){",
            "  // 预加载成功以后执行",
            "});"
        ]
    },

    "单页路由--获取参数": {
        "prefix": "router-getPageParams",
        "description": "",
        "body": [
            "var pageParams = router.getPageParams();"
        ]
    },

    "单页路由--局部加载": {
        "prefix": "router-loadPart",
        "description": "",
        "body": [
            "router.loadPart({id:\"\",url:\"\"});"
        ]
    },

    "单页路由--页面替换": {
        "prefix": "router-replace",
        "description": "",
        "body": [
            "router.replace({url:\"\",param:{}});"
        ]
    },

    "单页路由--页面刷新": {
        "prefix": "router-refresh",
        "description": "",
        "body": [
            "router.refresh();"
        ]
    },

    "单页路由--页面后退": {
        "prefix": "router-back",
        "description": "",
        "body": [
            "router.back();"
        ]
    },

    "定义组件": {
        "prefix": "loader-define",
        "description": "",
        "body": [
            "loader.define(function(require,exports,module,global){",
            "",
            "    var pageview = {};",
            "",
            "    return pageview;",
            "})"
        ]
    },
    "组件生命周期": {
        "prefix": "loader-define-life",
        "description": "",
        "body": [
            "loader.define({",
            "   beforeCreate:function(){",
            "   },",
            "   created:function(){",
            "   },",
            "   beforeLoad:function(){",
            "   },",
            "   loaded:function(require,exports,module,global){",
            "",
            "    var pageview = {};",
            "",
            "    return pageview;",
            "   },",
            "   show:function(){",
            "   },",
            "   hide:function(){",
            "   },",
            "   beforeDestroy:function(){",
            "   },",
            "   destroyed:function(){",
            "   }",
            "})"
        ]
    },

    "模块加载": {
        "prefix": "loader-require",
        "description": "",
        "body": [
            "loader.require([],function(){",
            "    // 加载某个模块",
            "})"
        ]
    },

    "模块资源导入": {
        "prefix": "loader-import",
        "description": "",
        "body": [
            "loader.import([\"\"],function(res){",
            "  // 创建成功以后执行回调",
            "});"
        ]
    },

    "模块配置": {
        "prefix": "loader-map",
        "description": "",
        "body": [
            "loader.map({",
            "    moduleName: \"\",",
            "    template: \"\",",
            "    script: \"\"",
            "})"
        ]
    },
    "模块全局方法": {
        "prefix": "loader-global",
        "description": "",
        "body": [
            "loader.global(function(global){",
            "    return {",
            "    }",
            "})"
        ]
    },

    "模块配置多个": {
        "prefix": "loader-mapall",
        "description": "",
        "body": [
            "loader.map({",
            "    modules: {",
            "        main: {",
            "            moduleName: \"main\",",
            "            template: \"\",",
            "            script: \"\"",
            "        }",
            "    }",
            "})"
        ]
    },
    "触发组件自定义事件": {
        "prefix": "loader-trigger",
        "description": "",
        "body": [
            "loader.trigger(`${module.id}:click`,\"aaa\")"
        ]
    },
    "监听组件自定义事件": {
        "prefix": "loader-on",
        "description": "",
        "body": [
            "//例如: <component id=\"chat\" name=\"xxxx\"></component>",
            "loader.on(`chat:click`,function(args){",
            "",
            "})"
        ]
    },
    "关闭监听组件自定义事件": {
        "prefix": "loader-off",
        "description": "",
        "body": [
            "//例如: <component id=\"chat\" name=\"xxxx\"></component>",
            "loader.off(`chat:click`)"
        ]
    },
    "等待组件加载完成返回组件参数": {
        "prefix": "loader-wait",
        "description": "",
        "body": [
            "//例如: <component id=\"list\" name=\"xxxx\"></component>",
            "loader.wait([\"list\"],function (list) {",
            "    console.log(list.exports);",
            "});"
        ]
    },
    "等待组件加载完成返回实例": {
        "prefix": "loader-waited",
        "description": "",
        "body": [
            "//例如: <component id=\"list\" name=\"xxxx\"></component>",
            "loader.waited([\"list\"],function (list) {",
            "    console.log(list);",
            "});"
        ]
    },
    "路由Dom选择器": {
        "prefix": "router-$",
        "description": "",
        "body": [
            "router.$(\"$1\")"
        ]
    },
    "路由Dom事件绑定": {
        "prefix": "router-$-on",
        "description": "",
        "body": [
            "router.$(\"$1\").on(\"click\",function(e){",
            "    console.log(e.target)",
            "})"
        ]
    },
    "路由全局事件绑定": {
        "prefix": "router-on",
        "description": "",
        "body": [
            "router.on(\"back\",function(e){",
            "    console.log(e.target)",
            "})"
        ]
    },
    "数据行为存储": {
        "prefix": "mue-store",
        "description": "",
        "body": [
            "// 初始化数据行为存储",
            "var bs = mue.store({",
            "    el: `#${module.id}`,",
            "    scope: \"page\",",
            "    data: {",
            "       a: 1,",
            "    },",
            "    methods: {},",
            "    watch: {},",
            "    computed: {},",
            "    templates: {},",
            "    beforeMount: function(){",
            "        // 数据解析前执行, 修改data的数据示例",
            "        // this.$$data.a = 2",
            "    },",
            "    mounted: function(){",
            "        // 数据解析后执行",
            "    }",
            "})"
        ]
    },
    "数据行为全局公开": {
        "prefix": "mue-store-public",
        "description": "",
        "body": [
            "// 初始化数据行为存储",
            "window.store = mue.store({",
            "    el: `#mue-router`,",
            "    scope: \"app\",",
            "    isPublic: true,",
            "    mixins: [],",
            "    data: {",
            "       a: 1,",
            "    },",
            "    methods: {},",
            "    watch: {},",
            "    computed: {},",
            "    templates: {},",
            "    beforeMount: function(){",
            "        // 数据解析前执行, 修改data的数据示例",
            "        // this.$$data.a = 2",
            "    },",
            "    mounted: function(){",
            "        // 数据解析后执行",
            "    }",
            "})"
        ]
    },
    "数据行为存储demo": {
        "prefix": "mue-store-demo",
        "description": "",
        "body": [
            "// 初始化数据行为存储",
            "var bs = mue.store({",
            "    scope: \"page\",",
            "    data: {",
            "       a: 1,",
            "    },",
            "    mixins: [],",
            "    methods: {},",
            "    watch: {},",
            "    computed: {},",
            "    templates: {},",
            "    beforeMount: function(){",
            "        // 数据解析前执行, 修改data的数据示例",
            "        // this.$$data.a = 2",
            "    },",
            "    mounted: function(){",
            "        // 数据解析后执行",
            "    }",
            "})",
            "<!-- html 结构 -->",
            "<b b-text=\"page.a\"></b>"
        ]
    },
    "获取路由历史": {
        "prefix": "mue-history-get",
        "description": "",
        "body": [
            "var allHistory = mue.history.get();"
        ]
    },
    "最后一条历史": {
        "prefix": "mue-history-getlast",
        "description": "",
        "body": [
            "var lastHistory = mue.history.getLast();"
        ]
    },
    "获取页面参数": {
        "prefix": "mue-history-getparams",
        "description": "",
        "body": [
            "var params = mue.history.getParams(module.id);"
        ]
    },
    "刷新": {
        "prefix": "mue-history-refresh",
        "description": "",
        "body": [
            "mue.history.refresh();"
        ]
    },
    "检测页面是否加载": {
        "prefix": "mue-history-check",
        "description": "",
        "body": [
            "var bool = mue.history.check(\"pages/login/login\");"
        ]
    },
    "检测模块是否以component加载": {
        "prefix": "mue-history-checkComponent",
        "description": "",
        "body": [
            "// tab1为id",
            "var bool = mue.history.checkComponent(\"tab1\");"
        ]
    },
    "检测模块是否以page加载": {
        "prefix": "mue-history-checkPage",
        "description": "",
        "body": [
            "// page1为id",
            "var bool = mue.history.checkPage(\"page1\");"
        ]
    },
    "获取component的实例": {
        "prefix": "mue-history-getComponent",
        "description": "",
        "body": [
            "// list1为id",
            "var distace = mue.history.getComponent(\"list1\");"
        ]
    },
    "获取page的实例": {
        "prefix": "mue-history-getPage",
        "description": "",
        "body": [
            "// page1为id, 不知道id传模块名",
            "var distace = mue.history.getPage(\"page1\");"
        ]
    },
    "模块内部获取page的弹窗实例": {
        "prefix": "mue-history-getPageDialog",
        "description": "",
        "body": [
            "// module.id 为模块内部的id",
            "var dialog = mue.history.getPageDialog(module.id);"
        ]
    },
    "加载组件": {
        "prefix": "loader-load",
        "description": "",
        "body": [
            "loader.load({",
            "    id:\"#tab1\",",
            "    url:\"pages/main/home.html\" ",
            "});"
        ]
    },
    "加载延迟组件": {
        "prefix": "loader-delay",
        "description": "",
        "body": [
            "loader.delay({",
            "    id:\"#tab1\"",
            "});"
        ]
    },
    "加载component": {
        "prefix": "loader-component",
        "description": "",
        "body": [
            "loader.component({",
            "    id:\"#tab1\",",
            "});"
        ]
    },
    "加载view": {
        "prefix": "loader-view",
        "description": "",
        "body": [
            "loader.view({",
            "    id:\"#tab1\",",
            "});"
        ]
    },
    "模块资源同步导入": {
        "prefix": "loader-importSync",
        "description": "",
        "body": [
            "loader.importSync([\"\"],function(res){",
            "  // 创建成功以后执行回调",
            "});"
        ]
    },
    "弹窗加载组件": {
        "prefix": "mue-page",
        "description": "",
        "body": [
            "var uiPage = mue.page({",
            "    url:\"pages/login/login.html\",",
            "    param: {}",
            "})"
        ]
    },
    "日期格式化": {
        "prefix": "mue-date-formate",
        "description": "",
        "body": [
            "var date = mue.date.format(\"2020-3-20\",\"MM/dd\")"
        ]
    },
    "转日期对象": {
        "prefix": "mue-date-convert",
        "description": "",
        "body": [
            "var date = mue.date.convert(1584781609309)"
        ]
    },
    "几天后": {
        "prefix": "mue-date-after",
        "description": "",
        "body": [
            "var date = mue.date.after(\"2020-3-20\",5); // 5天后,负数是5天前"
        ]
    },
    "几小时后": {
        "prefix": "mue-date-afterTime",
        "description": "",
        "body": [
            "var time = mue.date.afterTime(\"15:00\",30); // 30分钟后"
        ]
    },
    "日期转成星期几": {
        "prefix": "mue-date-toWeek",
        "description": "",
        "body": [
            "var week = mue.date.toWeek(\"2020-3-20\"); "
        ]
    },
    "倒计时": {
        "prefix": "mue-timer",
        "description": "",
        "body": [
            "var timer = mue.timer({",
            "    type: \"number\"",
            "    time: 10",
            "    onEnd: function() {",
            "        mue.alert(\"时间到\")",
            "    }",
            "})",
            "timer.start();"
        ]
    },
    "楼层组件": {
        "prefix": "mue-floor",
        "description": "",
        "body": [
            "var uiFloor = mue.floor({",
            "    id: \"#uiFloor\",",
            "    menu: \"#floorNav\", ",
            "    floorItem: \".mue-floor-item\",",
            "})"
        ]
    },
    "楼层组件-demo": {
        "prefix": "mue-floor-demo",
        "description": "",
        "body": [
            "// 初始化",
            "var uiFloor = mue.floor({",
            "    id: \"#uiFloor\",",
            "    menu: \"#floorNav\", ",
            "    floorItem: \".mue-floor-item\",",
            "})",
            "<!-- 菜单 html 对应的结构: -->",
            "<ul id=\"floorNav\" class=\"mue-nav\">",
            "    <li class=\"mue-btn active\">表单</li>",
            "    <li class=\"mue-btn\">正文</li>",
            "    <li class=\"mue-btn\">附件</li>",
            "</ul>",
            "<!-- 楼层 html 对应的结构: -->",
            "<div id=\"uiFloor\" class=\"mue-floor\">",
            "  <div class=\"mue-floor-main\">",
            "      <div class=\"mue-panel mue-floor-item\">",
            "      </div>",
            "      <div class=\"mue-panel mue-floor-item\">",
            "      </div>",
            "      <div class=\"mue-panel mue-floor-item\">",
            "      </div>",
            "  </div>",
            "  <div class=\"mue-floor-foot\"></div>",
            "</div>"
        ]
    },
    "扩展插件": {
        "prefix": "mue-extend",
        "description": "",
        "body": [
            ";",
            "(function(ui, $) {",
            "    \"use strict\";",
            "    ui.extend({",
            "        name: \"\", // 插件名称",
            "        config: {}, // 插件参数",
            "        callback: function(opt) {",
            "            var that = this;",
            "            // 获取插件参数",
            "            var param = that.config;",
            "            // 定义初始化方法",
            "            that.init = function(opt) {",
            "                console.log(\"init\")",
            "            };",
            "",
            "            // 执行初始化",
            "            that.init(param);",
            "            // 返回实例本身",
            "            return that;",
            "        }",
            "    })",
            "    return ui;",
            "})(window.mue || {}, window.libs);",
        ]
    }

}